#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HNHUWO2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hnhuwo2")]
	public partial class WOLinqClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNewsDistroOutlet(NewsDistroOutlet instance);
    partial void UpdateNewsDistroOutlet(NewsDistroOutlet instance);
    partial void DeleteNewsDistroOutlet(NewsDistroOutlet instance);
    partial void InsertPrintColourInfo(PrintColourInfo instance);
    partial void UpdatePrintColourInfo(PrintColourInfo instance);
    partial void DeletePrintColourInfo(PrintColourInfo instance);
    partial void InsertPrintCreditType(PrintCreditType instance);
    partial void UpdatePrintCreditType(PrintCreditType instance);
    partial void DeletePrintCreditType(PrintCreditType instance);
    partial void InsertPrintDaysNotice(PrintDaysNotice instance);
    partial void UpdatePrintDaysNotice(PrintDaysNotice instance);
    partial void DeletePrintDaysNotice(PrintDaysNotice instance);
    partial void InsertPrintMethod(PrintMethod instance);
    partial void UpdatePrintMethod(PrintMethod instance);
    partial void DeletePrintMethod(PrintMethod instance);
    partial void InsertPrintPaperSize(PrintPaperSize instance);
    partial void UpdatePrintPaperSize(PrintPaperSize instance);
    partial void DeletePrintPaperSize(PrintPaperSize instance);
    partial void InsertPrintPaperType(PrintPaperType instance);
    partial void UpdatePrintPaperType(PrintPaperType instance);
    partial void DeletePrintPaperType(PrintPaperType instance);
    partial void InsertPrintTypeOfDisplay(PrintTypeOfDisplay instance);
    partial void UpdatePrintTypeOfDisplay(PrintTypeOfDisplay instance);
    partial void DeletePrintTypeOfDisplay(PrintTypeOfDisplay instance);
    partial void InsertPrintTypeOfProject(PrintTypeOfProject instance);
    partial void UpdatePrintTypeOfProject(PrintTypeOfProject instance);
    partial void DeletePrintTypeOfProject(PrintTypeOfProject instance);
    partial void InsertRadioAdType(RadioAdType instance);
    partial void UpdateRadioAdType(RadioAdType instance);
    partial void DeleteRadioAdType(RadioAdType instance);
    partial void InsertRadioLength(RadioLength instance);
    partial void UpdateRadioLength(RadioLength instance);
    partial void DeleteRadioLength(RadioLength instance);
    partial void InsertRadioRecordingOption(RadioRecordingOption instance);
    partial void UpdateRadioRecordingOption(RadioRecordingOption instance);
    partial void DeleteRadioRecordingOption(RadioRecordingOption instance);
    partial void InsertRadioStations(RadioStations instance);
    partial void UpdateRadioStations(RadioStations instance);
    partial void DeleteRadioStations(RadioStations instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertVideoDestination(VideoDestination instance);
    partial void UpdateVideoDestination(VideoDestination instance);
    partial void DeleteVideoDestination(VideoDestination instance);
    partial void InsertVideoNarration(VideoNarration instance);
    partial void UpdateVideoNarration(VideoNarration instance);
    partial void DeleteVideoNarration(VideoNarration instance);
    partial void InsertVideoSources(VideoSources instance);
    partial void UpdateVideoSources(VideoSources instance);
    partial void DeleteVideoSources(VideoSources instance);
    partial void InsertWebLocation(WebLocation instance);
    partial void UpdateWebLocation(WebLocation instance);
    partial void DeleteWebLocation(WebLocation instance);
    partial void InsertWebSites(WebSites instance);
    partial void UpdateWebSites(WebSites instance);
    partial void DeleteWebSites(WebSites instance);
    partial void InsertWebType(WebType instance);
    partial void UpdateWebType(WebType instance);
    partial void DeleteWebType(WebType instance);
    partial void InsertWebUpdateType(WebUpdateType instance);
    partial void UpdateWebUpdateType(WebUpdateType instance);
    partial void DeleteWebUpdateType(WebUpdateType instance);
    partial void InsertWOType(WOType instance);
    partial void UpdateWOType(WOType instance);
    partial void DeleteWOType(WOType instance);
    partial void Insertoption(option instance);
    partial void Updateoption(option instance);
    partial void Deleteoption(option instance);
    partial void InsertWorkOrdersNews(WorkOrdersNews instance);
    partial void UpdateWorkOrdersNews(WorkOrdersNews instance);
    partial void DeleteWorkOrdersNews(WorkOrdersNews instance);
    partial void InsertWorkOrdersRadio(WorkOrdersRadio instance);
    partial void UpdateWorkOrdersRadio(WorkOrdersRadio instance);
    partial void DeleteWorkOrdersRadio(WorkOrdersRadio instance);
    partial void InsertWorkOrdersVideo(WorkOrdersVideo instance);
    partial void UpdateWorkOrdersVideo(WorkOrdersVideo instance);
    partial void DeleteWorkOrdersVideo(WorkOrdersVideo instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertLogError(LogError instance);
    partial void UpdateLogError(LogError instance);
    partial void DeleteLogError(LogError instance);
    partial void InsertLogActivity(LogActivity instance);
    partial void UpdateLogActivity(LogActivity instance);
    partial void DeleteLogActivity(LogActivity instance);
    partial void InsertWorkorder(Workorder instance);
    partial void UpdateWorkorder(Workorder instance);
    partial void DeleteWorkorder(Workorder instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertlookupPrintTypeOfProject(lookupPrintTypeOfProject instance);
    partial void UpdatelookupPrintTypeOfProject(lookupPrintTypeOfProject instance);
    partial void DeletelookupPrintTypeOfProject(lookupPrintTypeOfProject instance);
    partial void InsertWorkOrdersPrint(WorkOrdersPrint instance);
    partial void UpdateWorkOrdersPrint(WorkOrdersPrint instance);
    partial void DeleteWorkOrdersPrint(WorkOrdersPrint instance);
    partial void InsertWorkOrdersWeb(WorkOrdersWeb instance);
    partial void UpdateWorkOrdersWeb(WorkOrdersWeb instance);
    partial void DeleteWorkOrdersWeb(WorkOrdersWeb instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    #endregion
		
		public WOLinqClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["hnhuwo2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WOLinqClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WOLinqClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WOLinqClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WOLinqClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NewsDistroOutlet> NewsDistroOutlets
		{
			get
			{
				return this.GetTable<NewsDistroOutlet>();
			}
		}
		
		public System.Data.Linq.Table<PrintColourInfo> PrintColourInfos
		{
			get
			{
				return this.GetTable<PrintColourInfo>();
			}
		}
		
		public System.Data.Linq.Table<PrintCreditType> PrintCreditTypes
		{
			get
			{
				return this.GetTable<PrintCreditType>();
			}
		}
		
		public System.Data.Linq.Table<PrintDaysNotice> PrintDaysNotices
		{
			get
			{
				return this.GetTable<PrintDaysNotice>();
			}
		}
		
		public System.Data.Linq.Table<PrintMethod> PrintMethods
		{
			get
			{
				return this.GetTable<PrintMethod>();
			}
		}
		
		public System.Data.Linq.Table<PrintPaperSize> PrintPaperSizes
		{
			get
			{
				return this.GetTable<PrintPaperSize>();
			}
		}
		
		public System.Data.Linq.Table<PrintPaperType> PrintPaperTypes
		{
			get
			{
				return this.GetTable<PrintPaperType>();
			}
		}
		
		public System.Data.Linq.Table<PrintTypeOfDisplay> PrintTypeOfDisplays
		{
			get
			{
				return this.GetTable<PrintTypeOfDisplay>();
			}
		}
		
		public System.Data.Linq.Table<PrintTypeOfProject> PrintTypeOfProjects
		{
			get
			{
				return this.GetTable<PrintTypeOfProject>();
			}
		}
		
		public System.Data.Linq.Table<RadioAdType> RadioAdTypes
		{
			get
			{
				return this.GetTable<RadioAdType>();
			}
		}
		
		public System.Data.Linq.Table<RadioLength> RadioLengths
		{
			get
			{
				return this.GetTable<RadioLength>();
			}
		}
		
		public System.Data.Linq.Table<RadioRecordingOption> RadioRecordingOptions
		{
			get
			{
				return this.GetTable<RadioRecordingOption>();
			}
		}
		
		public System.Data.Linq.Table<RadioStations> RadioStations
		{
			get
			{
				return this.GetTable<RadioStations>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<VideoDestination> VideoDestinations
		{
			get
			{
				return this.GetTable<VideoDestination>();
			}
		}
		
		public System.Data.Linq.Table<VideoNarration> VideoNarrations
		{
			get
			{
				return this.GetTable<VideoNarration>();
			}
		}
		
		public System.Data.Linq.Table<VideoSources> VideoSources
		{
			get
			{
				return this.GetTable<VideoSources>();
			}
		}
		
		public System.Data.Linq.Table<WebLocation> WebLocations
		{
			get
			{
				return this.GetTable<WebLocation>();
			}
		}
		
		public System.Data.Linq.Table<WebSites> WebSites
		{
			get
			{
				return this.GetTable<WebSites>();
			}
		}
		
		public System.Data.Linq.Table<WebType> WebTypes
		{
			get
			{
				return this.GetTable<WebType>();
			}
		}
		
		public System.Data.Linq.Table<WebUpdateType> WebUpdateTypes
		{
			get
			{
				return this.GetTable<WebUpdateType>();
			}
		}
		
		public System.Data.Linq.Table<WOType> WOTypes
		{
			get
			{
				return this.GetTable<WOType>();
			}
		}
		
		public System.Data.Linq.Table<option> options
		{
			get
			{
				return this.GetTable<option>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrdersNews> WorkOrdersNews
		{
			get
			{
				return this.GetTable<WorkOrdersNews>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this.GetTable<WorkOrdersRadio>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrdersVideo> WorkOrdersVideos
		{
			get
			{
				return this.GetTable<WorkOrdersVideo>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<LogError> LogErrors
		{
			get
			{
				return this.GetTable<LogError>();
			}
		}
		
		public System.Data.Linq.Table<LogActivity> LogActivities
		{
			get
			{
				return this.GetTable<LogActivity>();
			}
		}
		
		public System.Data.Linq.Table<lookupVideoDaysNotice> lookupVideoDaysNotices
		{
			get
			{
				return this.GetTable<lookupVideoDaysNotice>();
			}
		}
		
		public System.Data.Linq.Table<Workorder> Workorders
		{
			get
			{
				return this.GetTable<Workorder>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<lookupPrintTypeOfProject> lookupPrintTypeOfProjects
		{
			get
			{
				return this.GetTable<lookupPrintTypeOfProject>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this.GetTable<WorkOrdersPrint>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrdersWeb> WorkOrdersWebs
		{
			get
			{
				return this.GetTable<WorkOrdersWeb>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupNewsDistroOutlets")]
	public partial class NewsDistroOutlet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersNews> _WorkOrdersNews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public NewsDistroOutlet()
		{
			this._WorkOrdersNews = new EntitySet<WorkOrdersNews>(new Action<WorkOrdersNews>(this.attach_WorkOrdersNews), new Action<WorkOrdersNews>(this.detach_WorkOrdersNews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsDistroOutlet_WorkOrdersNews", Storage="_WorkOrdersNews", ThisKey="ID", OtherKey="DistributionOutlets")]
		public EntitySet<WorkOrdersNews> WorkOrdersNews
		{
			get
			{
				return this._WorkOrdersNews;
			}
			set
			{
				this._WorkOrdersNews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersNews(WorkOrdersNews entity)
		{
			this.SendPropertyChanging();
			entity.NewsDistroOutlet = this;
		}
		
		private void detach_WorkOrdersNews(WorkOrdersNews entity)
		{
			this.SendPropertyChanging();
			entity.NewsDistroOutlet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintColourInfo")]
	public partial class PrintColourInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintColourInfo()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintColourInfo_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="ColourInfo")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintColourInfo = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintColourInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintCreditType")]
	public partial class PrintCreditType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintCreditType()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintCreditType_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="Credit")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintCreditType = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintCreditType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintDaysNotice")]
	public partial class PrintDaysNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _pID;
		
		private int _Days;
		
		private string _AdditionalNotes;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpIDChanging(int value);
    partial void OnpIDChanged();
    partial void OnDaysChanging(int value);
    partial void OnDaysChanged();
    partial void OnAdditionalNotesChanging(string value);
    partial void OnAdditionalNotesChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintDaysNotice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pID", DbType="Int NOT NULL")]
		public int pID
		{
			get
			{
				return this._pID;
			}
			set
			{
				if ((this._pID != value))
				{
					this.OnpIDChanging(value);
					this.SendPropertyChanging();
					this._pID = value;
					this.SendPropertyChanged("pID");
					this.OnpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int NOT NULL")]
		public int Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AdditionalNotes
		{
			get
			{
				return this._AdditionalNotes;
			}
			set
			{
				if ((this._AdditionalNotes != value))
				{
					this.OnAdditionalNotesChanging(value);
					this.SendPropertyChanging();
					this._AdditionalNotes = value;
					this.SendPropertyChanged("AdditionalNotes");
					this.OnAdditionalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintMethod")]
	public partial class PrintMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintMethod()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintMethod_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="PrintingMethod")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintMethod = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintPaperSize")]
	public partial class PrintPaperSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintPaperSize()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintPaperSize_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="PaperSize")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintPaperSize = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintPaperSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintPaperType")]
	public partial class PrintPaperType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintPaperType()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintPaperType_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="PaperType")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintPaperType = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintPaperType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintTypeOfDisplay")]
	public partial class PrintTypeOfDisplay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintTypeOfDisplay()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTypeOfDisplay_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="TypeOfDisplay")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintTypeOfDisplay = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintTypeOfDisplay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintTypeOfProject")]
	public partial class PrintTypeOfProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintTypeOfProject()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTypeOfProject_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="ProjectType")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintTypeOfProject = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.PrintTypeOfProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupRadioAdType")]
	public partial class RadioAdType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersRadio> _WorkOrdersRadios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public RadioAdType()
		{
			this._WorkOrdersRadios = new EntitySet<WorkOrdersRadio>(new Action<WorkOrdersRadio>(this.attach_WorkOrdersRadios), new Action<WorkOrdersRadio>(this.detach_WorkOrdersRadios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioAdType_WorkOrdersRadio", Storage="_WorkOrdersRadios", ThisKey="ID", OtherKey="AdType")]
		public EntitySet<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this._WorkOrdersRadios;
			}
			set
			{
				this._WorkOrdersRadios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioAdType = this;
		}
		
		private void detach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioAdType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupRadioLength")]
	public partial class RadioLength : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersRadio> _WorkOrdersRadios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public RadioLength()
		{
			this._WorkOrdersRadios = new EntitySet<WorkOrdersRadio>(new Action<WorkOrdersRadio>(this.attach_WorkOrdersRadios), new Action<WorkOrdersRadio>(this.detach_WorkOrdersRadios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioLength_WorkOrdersRadio", Storage="_WorkOrdersRadios", ThisKey="ID", OtherKey="LengthOfAd")]
		public EntitySet<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this._WorkOrdersRadios;
			}
			set
			{
				this._WorkOrdersRadios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioLength = this;
		}
		
		private void detach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioLength = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupRadioRecordingOptions")]
	public partial class RadioRecordingOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersRadio> _WorkOrdersRadios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public RadioRecordingOption()
		{
			this._WorkOrdersRadios = new EntitySet<WorkOrdersRadio>(new Action<WorkOrdersRadio>(this.attach_WorkOrdersRadios), new Action<WorkOrdersRadio>(this.detach_WorkOrdersRadios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioRecordingOption_WorkOrdersRadio", Storage="_WorkOrdersRadios", ThisKey="ID", OtherKey="RecordingOptions")]
		public EntitySet<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this._WorkOrdersRadios;
			}
			set
			{
				this._WorkOrdersRadios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioRecordingOption = this;
		}
		
		private void detach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioRecordingOption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupRadioStations")]
	public partial class RadioStations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersRadio> _WorkOrdersRadios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public RadioStations()
		{
			this._WorkOrdersRadios = new EntitySet<WorkOrdersRadio>(new Action<WorkOrdersRadio>(this.attach_WorkOrdersRadios), new Action<WorkOrdersRadio>(this.detach_WorkOrdersRadios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioStations_WorkOrdersRadio", Storage="_WorkOrdersRadios", ThisKey="ID", OtherKey="RadioStation")]
		public EntitySet<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this._WorkOrdersRadios;
			}
			set
			{
				this._WorkOrdersRadios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioStations = this;
		}
		
		private void detach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.RadioStations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupStatus")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _status;
		
		private EntitySet<Workorder> _Workorders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Status()
		{
			this._Workorders = new EntitySet<Workorder>(new Action<Workorder>(this.attach_Workorders), new Action<Workorder>(this.detach_Workorders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Workorder", Storage="_Workorders", ThisKey="ID", OtherKey="status")]
		public EntitySet<Workorder> Workorders
		{
			get
			{
				return this._Workorders;
			}
			set
			{
				this._Workorders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupVideoDestinations")]
	public partial class VideoDestination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public VideoDestination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupVideoNarration")]
	public partial class VideoNarration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersVideo> _WorkOrdersVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public VideoNarration()
		{
			this._WorkOrdersVideos = new EntitySet<WorkOrdersVideo>(new Action<WorkOrdersVideo>(this.attach_WorkOrdersVideos), new Action<WorkOrdersVideo>(this.detach_WorkOrdersVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoNarration_WorkOrdersVideo", Storage="_WorkOrdersVideos", ThisKey="ID", OtherKey="Narrator")]
		public EntitySet<WorkOrdersVideo> WorkOrdersVideos
		{
			get
			{
				return this._WorkOrdersVideos;
			}
			set
			{
				this._WorkOrdersVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.VideoNarration = this;
		}
		
		private void detach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.VideoNarration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupVideoSources")]
	public partial class VideoSources : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersVideo> _WorkOrdersVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public VideoSources()
		{
			this._WorkOrdersVideos = new EntitySet<WorkOrdersVideo>(new Action<WorkOrdersVideo>(this.attach_WorkOrdersVideos), new Action<WorkOrdersVideo>(this.detach_WorkOrdersVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoSources_WorkOrdersVideo", Storage="_WorkOrdersVideos", ThisKey="ID", OtherKey="VideoSource")]
		public EntitySet<WorkOrdersVideo> WorkOrdersVideos
		{
			get
			{
				return this._WorkOrdersVideos;
			}
			set
			{
				this._WorkOrdersVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.VideoSources = this;
		}
		
		private void detach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.VideoSources = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupWebLocation")]
	public partial class WebLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public WebLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupWebSites")]
	public partial class WebSites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersWeb> _WorkOrdersWebs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public WebSites()
		{
			this._WorkOrdersWebs = new EntitySet<WorkOrdersWeb>(new Action<WorkOrdersWeb>(this.attach_WorkOrdersWebs), new Action<WorkOrdersWeb>(this.detach_WorkOrdersWebs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebSites_WorkOrdersWeb", Storage="_WorkOrdersWebs", ThisKey="ID", OtherKey="Website")]
		public EntitySet<WorkOrdersWeb> WorkOrdersWebs
		{
			get
			{
				return this._WorkOrdersWebs;
			}
			set
			{
				this._WorkOrdersWebs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebSites = this;
		}
		
		private void detach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebSites = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupWebType")]
	public partial class WebType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersWeb> _WorkOrdersWebs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public WebType()
		{
			this._WorkOrdersWebs = new EntitySet<WorkOrdersWeb>(new Action<WorkOrdersWeb>(this.attach_WorkOrdersWebs), new Action<WorkOrdersWeb>(this.detach_WorkOrdersWebs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebType_WorkOrdersWeb", Storage="_WorkOrdersWebs", ThisKey="ID", OtherKey="TypeWebWork")]
		public EntitySet<WorkOrdersWeb> WorkOrdersWebs
		{
			get
			{
				return this._WorkOrdersWebs;
			}
			set
			{
				this._WorkOrdersWebs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebType = this;
		}
		
		private void detach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupWebUpdateType")]
	public partial class WebUpdateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersWeb> _WorkOrdersWebs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public WebUpdateType()
		{
			this._WorkOrdersWebs = new EntitySet<WorkOrdersWeb>(new Action<WorkOrdersWeb>(this.attach_WorkOrdersWebs), new Action<WorkOrdersWeb>(this.detach_WorkOrdersWebs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebUpdateType_WorkOrdersWeb", Storage="_WorkOrdersWebs", ThisKey="ID", OtherKey="TypeOfUpdate")]
		public EntitySet<WorkOrdersWeb> WorkOrdersWebs
		{
			get
			{
				return this._WorkOrdersWebs;
			}
			set
			{
				this._WorkOrdersWebs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebUpdateType = this;
		}
		
		private void detach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.WebUpdateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupWOType")]
	public partial class WOType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _type;
		
		private EntitySet<Workorder> _Workorders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public WOType()
		{
			this._Workorders = new EntitySet<Workorder>(new Action<Workorder>(this.attach_Workorders), new Action<Workorder>(this.detach_Workorders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WOType_Workorder", Storage="_Workorders", ThisKey="ID", OtherKey="wotype")]
		public EntitySet<Workorder> Workorders
		{
			get
			{
				return this._Workorders;
			}
			set
			{
				this._Workorders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.WOType1 = this;
		}
		
		private void detach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.WOType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.options")]
	public partial class option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OptionGroup;
		
		private string _OptionText;
		
		private System.Nullable<int> _Lookup;
		
		private int _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOptionGroupChanging(string value);
    partial void OnOptionGroupChanged();
    partial void OnOptionTextChanging(string value);
    partial void OnOptionTextChanged();
    partial void OnLookupChanging(System.Nullable<int> value);
    partial void OnLookupChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    #endregion
		
		public option()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionGroup", DbType="NVarChar(50)")]
		public string OptionGroup
		{
			get
			{
				return this._OptionGroup;
			}
			set
			{
				if ((this._OptionGroup != value))
				{
					this.OnOptionGroupChanging(value);
					this.SendPropertyChanging();
					this._OptionGroup = value;
					this.SendPropertyChanged("OptionGroup");
					this.OnOptionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionText", DbType="NVarChar(50)")]
		public string OptionText
		{
			get
			{
				return this._OptionText;
			}
			set
			{
				if ((this._OptionText != value))
				{
					this.OnOptionTextChanging(value);
					this.SendPropertyChanging();
					this._OptionText = value;
					this.SendPropertyChanged("OptionText");
					this.OnOptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lookup", DbType="Int")]
		public System.Nullable<int> Lookup
		{
			get
			{
				return this._Lookup;
			}
			set
			{
				if ((this._Lookup != value))
				{
					this.OnLookupChanging(value);
					this.SendPropertyChanging();
					this._Lookup = value;
					this.SendPropertyChanged("Lookup");
					this.OnLookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrdersNews")]
	public partial class WorkOrdersNews : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private int _DistributionOutlets;
		
		private string _DistributionDetails;
		
		private string _Contact;
		
		private string _AdditionalNotes;
		
		private EntityRef<NewsDistroOutlet> _NewsDistroOutlet;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnDistributionOutletsChanging(int value);
    partial void OnDistributionOutletsChanged();
    partial void OnDistributionDetailsChanging(string value);
    partial void OnDistributionDetailsChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnAdditionalNotesChanging(string value);
    partial void OnAdditionalNotesChanged();
    #endregion
		
		public WorkOrdersNews()
		{
			this._NewsDistroOutlet = default(EntityRef<NewsDistroOutlet>);
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributionOutlets", DbType="Int NOT NULL")]
		public int DistributionOutlets
		{
			get
			{
				return this._DistributionOutlets;
			}
			set
			{
				if ((this._DistributionOutlets != value))
				{
					if (this._NewsDistroOutlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistributionOutletsChanging(value);
					this.SendPropertyChanging();
					this._DistributionOutlets = value;
					this.SendPropertyChanged("DistributionOutlets");
					this.OnDistributionOutletsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributionDetails", DbType="NVarChar(255)")]
		public string DistributionDetails
		{
			get
			{
				return this._DistributionDetails;
			}
			set
			{
				if ((this._DistributionDetails != value))
				{
					this.OnDistributionDetailsChanging(value);
					this.SendPropertyChanging();
					this._DistributionDetails = value;
					this.SendPropertyChanged("DistributionDetails");
					this.OnDistributionDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AdditionalNotes
		{
			get
			{
				return this._AdditionalNotes;
			}
			set
			{
				if ((this._AdditionalNotes != value))
				{
					this.OnAdditionalNotesChanging(value);
					this.SendPropertyChanging();
					this._AdditionalNotes = value;
					this.SendPropertyChanged("AdditionalNotes");
					this.OnAdditionalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsDistroOutlet_WorkOrdersNews", Storage="_NewsDistroOutlet", ThisKey="DistributionOutlets", OtherKey="ID", IsForeignKey=true)]
		public NewsDistroOutlet NewsDistroOutlet
		{
			get
			{
				return this._NewsDistroOutlet.Entity;
			}
			set
			{
				NewsDistroOutlet previousValue = this._NewsDistroOutlet.Entity;
				if (((previousValue != value) 
							|| (this._NewsDistroOutlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NewsDistroOutlet.Entity = null;
						previousValue.WorkOrdersNews.Remove(this);
					}
					this._NewsDistroOutlet.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersNews.Add(this);
						this._DistributionOutlets = value.ID;
					}
					else
					{
						this._DistributionOutlets = default(int);
					}
					this.SendPropertyChanged("NewsDistroOutlet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersNews", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.WorkOrdersNews.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersNews.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrdersRadio")]
	public partial class WorkOrdersRadio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private int _AdType;
		
		private System.Nullable<int> _AiringMonth;
		
		private System.Nullable<int> _RadioStation;
		
		private System.Nullable<int> _LengthOfAd;
		
		private System.Nullable<System.DateTime> _StartAiringDate;
		
		private System.Nullable<System.DateTime> _EndAiringDate;
		
		private string _Budget;
		
		private System.Nullable<int> _RecordingOptions;
		
		private string _Notes;
		
		private string _RadioStationOther;
		
		private EntityRef<RadioAdType> _RadioAdType;
		
		private EntityRef<RadioLength> _RadioLength;
		
		private EntityRef<RadioRecordingOption> _RadioRecordingOption;
		
		private EntityRef<RadioStations> _RadioStation1;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnAdTypeChanging(int value);
    partial void OnAdTypeChanged();
    partial void OnAiringMonthChanging(System.Nullable<int> value);
    partial void OnAiringMonthChanged();
    partial void OnRadioStationChanging(System.Nullable<int> value);
    partial void OnRadioStationChanged();
    partial void OnLengthOfAdChanging(System.Nullable<int> value);
    partial void OnLengthOfAdChanged();
    partial void OnStartAiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartAiringDateChanged();
    partial void OnEndAiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndAiringDateChanged();
    partial void OnBudgetChanging(string value);
    partial void OnBudgetChanged();
    partial void OnRecordingOptionsChanging(System.Nullable<int> value);
    partial void OnRecordingOptionsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRadioStationOtherChanging(string value);
    partial void OnRadioStationOtherChanged();
    #endregion
		
		public WorkOrdersRadio()
		{
			this._RadioAdType = default(EntityRef<RadioAdType>);
			this._RadioLength = default(EntityRef<RadioLength>);
			this._RadioRecordingOption = default(EntityRef<RadioRecordingOption>);
			this._RadioStation1 = default(EntityRef<RadioStations>);
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdType", DbType="Int NOT NULL")]
		public int AdType
		{
			get
			{
				return this._AdType;
			}
			set
			{
				if ((this._AdType != value))
				{
					if (this._RadioAdType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdTypeChanging(value);
					this.SendPropertyChanging();
					this._AdType = value;
					this.SendPropertyChanged("AdType");
					this.OnAdTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AiringMonth", DbType="Int")]
		public System.Nullable<int> AiringMonth
		{
			get
			{
				return this._AiringMonth;
			}
			set
			{
				if ((this._AiringMonth != value))
				{
					this.OnAiringMonthChanging(value);
					this.SendPropertyChanging();
					this._AiringMonth = value;
					this.SendPropertyChanged("AiringMonth");
					this.OnAiringMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioStation", DbType="Int")]
		public System.Nullable<int> RadioStation
		{
			get
			{
				return this._RadioStation;
			}
			set
			{
				if ((this._RadioStation != value))
				{
					if (this._RadioStation1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadioStationChanging(value);
					this.SendPropertyChanging();
					this._RadioStation = value;
					this.SendPropertyChanged("RadioStation");
					this.OnRadioStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfAd", DbType="Int")]
		public System.Nullable<int> LengthOfAd
		{
			get
			{
				return this._LengthOfAd;
			}
			set
			{
				if ((this._LengthOfAd != value))
				{
					if (this._RadioLength.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLengthOfAdChanging(value);
					this.SendPropertyChanging();
					this._LengthOfAd = value;
					this.SendPropertyChanged("LengthOfAd");
					this.OnLengthOfAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAiringDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartAiringDate
		{
			get
			{
				return this._StartAiringDate;
			}
			set
			{
				if ((this._StartAiringDate != value))
				{
					this.OnStartAiringDateChanging(value);
					this.SendPropertyChanging();
					this._StartAiringDate = value;
					this.SendPropertyChanged("StartAiringDate");
					this.OnStartAiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAiringDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndAiringDate
		{
			get
			{
				return this._EndAiringDate;
			}
			set
			{
				if ((this._EndAiringDate != value))
				{
					this.OnEndAiringDateChanging(value);
					this.SendPropertyChanging();
					this._EndAiringDate = value;
					this.SendPropertyChanged("EndAiringDate");
					this.OnEndAiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="NVarChar(10)")]
		public string Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordingOptions", DbType="Int")]
		public System.Nullable<int> RecordingOptions
		{
			get
			{
				return this._RecordingOptions;
			}
			set
			{
				if ((this._RecordingOptions != value))
				{
					if (this._RadioRecordingOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecordingOptionsChanging(value);
					this.SendPropertyChanging();
					this._RecordingOptions = value;
					this.SendPropertyChanged("RecordingOptions");
					this.OnRecordingOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioStationOther", DbType="NVarChar(255)")]
		public string RadioStationOther
		{
			get
			{
				return this._RadioStationOther;
			}
			set
			{
				if ((this._RadioStationOther != value))
				{
					this.OnRadioStationOtherChanging(value);
					this.SendPropertyChanging();
					this._RadioStationOther = value;
					this.SendPropertyChanged("RadioStationOther");
					this.OnRadioStationOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioAdType_WorkOrdersRadio", Storage="_RadioAdType", ThisKey="AdType", OtherKey="ID", IsForeignKey=true)]
		public RadioAdType RadioAdType
		{
			get
			{
				return this._RadioAdType.Entity;
			}
			set
			{
				RadioAdType previousValue = this._RadioAdType.Entity;
				if (((previousValue != value) 
							|| (this._RadioAdType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadioAdType.Entity = null;
						previousValue.WorkOrdersRadios.Remove(this);
					}
					this._RadioAdType.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersRadios.Add(this);
						this._AdType = value.ID;
					}
					else
					{
						this._AdType = default(int);
					}
					this.SendPropertyChanged("RadioAdType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioLength_WorkOrdersRadio", Storage="_RadioLength", ThisKey="LengthOfAd", OtherKey="ID", IsForeignKey=true)]
		public RadioLength RadioLength
		{
			get
			{
				return this._RadioLength.Entity;
			}
			set
			{
				RadioLength previousValue = this._RadioLength.Entity;
				if (((previousValue != value) 
							|| (this._RadioLength.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadioLength.Entity = null;
						previousValue.WorkOrdersRadios.Remove(this);
					}
					this._RadioLength.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersRadios.Add(this);
						this._LengthOfAd = value.ID;
					}
					else
					{
						this._LengthOfAd = default(Nullable<int>);
					}
					this.SendPropertyChanged("RadioLength");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioRecordingOption_WorkOrdersRadio", Storage="_RadioRecordingOption", ThisKey="RecordingOptions", OtherKey="ID", IsForeignKey=true)]
		public RadioRecordingOption RadioRecordingOption
		{
			get
			{
				return this._RadioRecordingOption.Entity;
			}
			set
			{
				RadioRecordingOption previousValue = this._RadioRecordingOption.Entity;
				if (((previousValue != value) 
							|| (this._RadioRecordingOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadioRecordingOption.Entity = null;
						previousValue.WorkOrdersRadios.Remove(this);
					}
					this._RadioRecordingOption.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersRadios.Add(this);
						this._RecordingOptions = value.ID;
					}
					else
					{
						this._RecordingOptions = default(Nullable<int>);
					}
					this.SendPropertyChanged("RadioRecordingOption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RadioStations_WorkOrdersRadio", Storage="_RadioStation1", ThisKey="RadioStation", OtherKey="ID", IsForeignKey=true)]
		public RadioStations RadioStations
		{
			get
			{
				return this._RadioStation1.Entity;
			}
			set
			{
				RadioStations previousValue = this._RadioStation1.Entity;
				if (((previousValue != value) 
							|| (this._RadioStation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadioStation1.Entity = null;
						previousValue.WorkOrdersRadios.Remove(this);
					}
					this._RadioStation1.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersRadios.Add(this);
						this._RadioStation = value.ID;
					}
					else
					{
						this._RadioStation = default(Nullable<int>);
					}
					this.SendPropertyChanged("RadioStations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersRadio", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.WorkOrdersRadios.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersRadios.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrdersVideo")]
	public partial class WorkOrdersVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private System.Nullable<int> _VideoSource;
		
		private string _VideoDestination;
		
		private string _DestinationURL;
		
		private string _NumberDVDs;
		
		private string _VideoLength;
		
		private System.Nullable<bool> _BackgroundMusic;
		
		private string _SongChoices;
		
		private System.Nullable<bool> _NarrationReqd;
		
		private System.Nullable<int> _Narrator;
		
		private string _VideoDescription;
		
		private System.Nullable<bool> _CreditsRequired;
		
		private string _Notes;
		
		private EntityRef<VideoNarration> _VideoNarration;
		
		private EntityRef<VideoSources> _VideoSource1;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnVideoSourceChanging(System.Nullable<int> value);
    partial void OnVideoSourceChanged();
    partial void OnVideoDestinationChanging(string value);
    partial void OnVideoDestinationChanged();
    partial void OnDestinationURLChanging(string value);
    partial void OnDestinationURLChanged();
    partial void OnNumberDVDsChanging(string value);
    partial void OnNumberDVDsChanged();
    partial void OnVideoLengthChanging(string value);
    partial void OnVideoLengthChanged();
    partial void OnBackgroundMusicChanging(System.Nullable<bool> value);
    partial void OnBackgroundMusicChanged();
    partial void OnSongChoicesChanging(string value);
    partial void OnSongChoicesChanged();
    partial void OnNarrationReqdChanging(System.Nullable<bool> value);
    partial void OnNarrationReqdChanged();
    partial void OnNarratorChanging(System.Nullable<int> value);
    partial void OnNarratorChanged();
    partial void OnVideoDescriptionChanging(string value);
    partial void OnVideoDescriptionChanged();
    partial void OnCreditsRequiredChanging(System.Nullable<bool> value);
    partial void OnCreditsRequiredChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public WorkOrdersVideo()
		{
			this._VideoNarration = default(EntityRef<VideoNarration>);
			this._VideoSource1 = default(EntityRef<VideoSources>);
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoSource", DbType="Int")]
		public System.Nullable<int> VideoSource
		{
			get
			{
				return this._VideoSource;
			}
			set
			{
				if ((this._VideoSource != value))
				{
					if (this._VideoSource1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoSourceChanging(value);
					this.SendPropertyChanging();
					this._VideoSource = value;
					this.SendPropertyChanged("VideoSource");
					this.OnVideoSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoDestination", DbType="NVarChar(20)")]
		public string VideoDestination
		{
			get
			{
				return this._VideoDestination;
			}
			set
			{
				if ((this._VideoDestination != value))
				{
					this.OnVideoDestinationChanging(value);
					this.SendPropertyChanging();
					this._VideoDestination = value;
					this.SendPropertyChanged("VideoDestination");
					this.OnVideoDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationURL", DbType="NVarChar(255)")]
		public string DestinationURL
		{
			get
			{
				return this._DestinationURL;
			}
			set
			{
				if ((this._DestinationURL != value))
				{
					this.OnDestinationURLChanging(value);
					this.SendPropertyChanging();
					this._DestinationURL = value;
					this.SendPropertyChanged("DestinationURL");
					this.OnDestinationURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberDVDs", DbType="NVarChar(255)")]
		public string NumberDVDs
		{
			get
			{
				return this._NumberDVDs;
			}
			set
			{
				if ((this._NumberDVDs != value))
				{
					this.OnNumberDVDsChanging(value);
					this.SendPropertyChanging();
					this._NumberDVDs = value;
					this.SendPropertyChanged("NumberDVDs");
					this.OnNumberDVDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLength", DbType="NVarChar(255)")]
		public string VideoLength
		{
			get
			{
				return this._VideoLength;
			}
			set
			{
				if ((this._VideoLength != value))
				{
					this.OnVideoLengthChanging(value);
					this.SendPropertyChanging();
					this._VideoLength = value;
					this.SendPropertyChanged("VideoLength");
					this.OnVideoLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundMusic", DbType="Bit")]
		public System.Nullable<bool> BackgroundMusic
		{
			get
			{
				return this._BackgroundMusic;
			}
			set
			{
				if ((this._BackgroundMusic != value))
				{
					this.OnBackgroundMusicChanging(value);
					this.SendPropertyChanging();
					this._BackgroundMusic = value;
					this.SendPropertyChanged("BackgroundMusic");
					this.OnBackgroundMusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongChoices", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SongChoices
		{
			get
			{
				return this._SongChoices;
			}
			set
			{
				if ((this._SongChoices != value))
				{
					this.OnSongChoicesChanging(value);
					this.SendPropertyChanging();
					this._SongChoices = value;
					this.SendPropertyChanged("SongChoices");
					this.OnSongChoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NarrationReqd", DbType="Bit")]
		public System.Nullable<bool> NarrationReqd
		{
			get
			{
				return this._NarrationReqd;
			}
			set
			{
				if ((this._NarrationReqd != value))
				{
					this.OnNarrationReqdChanging(value);
					this.SendPropertyChanging();
					this._NarrationReqd = value;
					this.SendPropertyChanged("NarrationReqd");
					this.OnNarrationReqdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narrator", DbType="Int")]
		public System.Nullable<int> Narrator
		{
			get
			{
				return this._Narrator;
			}
			set
			{
				if ((this._Narrator != value))
				{
					if (this._VideoNarration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNarratorChanging(value);
					this.SendPropertyChanging();
					this._Narrator = value;
					this.SendPropertyChanged("Narrator");
					this.OnNarratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string VideoDescription
		{
			get
			{
				return this._VideoDescription;
			}
			set
			{
				if ((this._VideoDescription != value))
				{
					this.OnVideoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._VideoDescription = value;
					this.SendPropertyChanged("VideoDescription");
					this.OnVideoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsRequired", DbType="Bit")]
		public System.Nullable<bool> CreditsRequired
		{
			get
			{
				return this._CreditsRequired;
			}
			set
			{
				if ((this._CreditsRequired != value))
				{
					this.OnCreditsRequiredChanging(value);
					this.SendPropertyChanging();
					this._CreditsRequired = value;
					this.SendPropertyChanged("CreditsRequired");
					this.OnCreditsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoNarration_WorkOrdersVideo", Storage="_VideoNarration", ThisKey="Narrator", OtherKey="ID", IsForeignKey=true)]
		public VideoNarration VideoNarration
		{
			get
			{
				return this._VideoNarration.Entity;
			}
			set
			{
				VideoNarration previousValue = this._VideoNarration.Entity;
				if (((previousValue != value) 
							|| (this._VideoNarration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoNarration.Entity = null;
						previousValue.WorkOrdersVideos.Remove(this);
					}
					this._VideoNarration.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersVideos.Add(this);
						this._Narrator = value.ID;
					}
					else
					{
						this._Narrator = default(Nullable<int>);
					}
					this.SendPropertyChanged("VideoNarration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoSources_WorkOrdersVideo", Storage="_VideoSource1", ThisKey="VideoSource", OtherKey="ID", IsForeignKey=true)]
		public VideoSources VideoSources
		{
			get
			{
				return this._VideoSource1.Entity;
			}
			set
			{
				VideoSources previousValue = this._VideoSource1.Entity;
				if (((previousValue != value) 
							|| (this._VideoSource1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoSource1.Entity = null;
						previousValue.WorkOrdersVideos.Remove(this);
					}
					this._VideoSource1.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersVideos.Add(this);
						this._VideoSource = value.ID;
					}
					else
					{
						this._VideoSource = default(Nullable<int>);
					}
					this.SendPropertyChanged("VideoSources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersVideo", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.WorkOrdersVideos.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersVideos.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private int _Role;
		
		private string _FullName;
		
		private string _Email;
		
		private bool _Active;
		
		private EntitySet<Workorder> _Workorders;
		
		private EntityRef<UserRole> _UserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnRoleChanging(int value);
    partial void OnRoleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public User()
		{
			this._Workorders = new EntitySet<Workorder>(new Action<Workorder>(this.attach_Workorders), new Action<Workorder>(this.detach_Workorders));
			this._UserRole = default(EntityRef<UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._UserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Workorder", Storage="_Workorders", ThisKey="ID", OtherKey="ProgramManager")]
		public EntitySet<Workorder> Workorders
		{
			get
			{
				return this._Workorders;
			}
			set
			{
				this._Workorders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_UserRole", ThisKey="Role", OtherKey="ID", IsForeignKey=true)]
		public UserRole UserRole
		{
			get
			{
				return this._UserRole.Entity;
			}
			set
			{
				UserRole previousValue = this._UserRole.Entity;
				if (((previousValue != value) 
							|| (this._UserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRole.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserRole.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Role = value.ID;
					}
					else
					{
						this._Role = default(int);
					}
					this.SendPropertyChanged("UserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Workorders(Workorder entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogError")]
	public partial class LogError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _DateTime;
		
		private string _username;
		
		private string _URL;
		
		private string _message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public LogError()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogActivity")]
	public partial class LogActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _DateTime;
		
		private int _wID;
		
		private string _username;
		
		private string _action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    #endregion
		
		public LogActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="NVarChar(255)")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupVideoDaysNotice")]
	public partial class lookupVideoDaysNotice
	{
		
		private int _ID;
		
		private System.Nullable<int> _DaysNotice;
		
		public lookupVideoDaysNotice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysNotice", DbType="Int")]
		public System.Nullable<int> DaysNotice
		{
			get
			{
				return this._DaysNotice;
			}
			set
			{
				if ((this._DaysNotice != value))
				{
					this._DaysNotice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workorders")]
	public partial class Workorder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _submitted_by;
		
		private System.DateTime _submitted_date;
		
		private int _wotype;
		
		private string _title;
		
		private System.Nullable<int> _coordinator;
		
		private System.Nullable<System.DateTime> _duedate;
		
		private int _status;
		
		private string _coordinatorNotes;
		
		private EntitySet<WorkOrdersNews> _WorkOrdersNews;
		
		private EntitySet<WorkOrdersRadio> _WorkOrdersRadios;
		
		private EntitySet<WorkOrdersVideo> _WorkOrdersVideos;
		
		private EntitySet<File> _Files;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
		private EntitySet<WorkOrdersWeb> _WorkOrdersWebs;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<WOType> _WOType1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onsubmitted_byChanging(string value);
    partial void Onsubmitted_byChanged();
    partial void Onsubmitted_dateChanging(System.DateTime value);
    partial void Onsubmitted_dateChanged();
    partial void OnwotypeChanging(int value);
    partial void OnwotypeChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnProgramManagerChanging(System.Nullable<int> value);
    partial void OnProgramManagerChanged();
    partial void OnduedateChanging(System.Nullable<System.DateTime> value);
    partial void OnduedateChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OncoordinatorNotesChanging(string value);
    partial void OncoordinatorNotesChanged();
    #endregion
		
		public Workorder()
		{
			this._WorkOrdersNews = new EntitySet<WorkOrdersNews>(new Action<WorkOrdersNews>(this.attach_WorkOrdersNews), new Action<WorkOrdersNews>(this.detach_WorkOrdersNews));
			this._WorkOrdersRadios = new EntitySet<WorkOrdersRadio>(new Action<WorkOrdersRadio>(this.attach_WorkOrdersRadios), new Action<WorkOrdersRadio>(this.detach_WorkOrdersRadios));
			this._WorkOrdersVideos = new EntitySet<WorkOrdersVideo>(new Action<WorkOrdersVideo>(this.attach_WorkOrdersVideos), new Action<WorkOrdersVideo>(this.detach_WorkOrdersVideos));
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			this._WorkOrdersWebs = new EntitySet<WorkOrdersWeb>(new Action<WorkOrdersWeb>(this.attach_WorkOrdersWebs), new Action<WorkOrdersWeb>(this.detach_WorkOrdersWebs));
			this._Status1 = default(EntityRef<Status>);
			this._WOType1 = default(EntityRef<WOType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_by", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string submitted_by
		{
			get
			{
				return this._submitted_by;
			}
			set
			{
				if ((this._submitted_by != value))
				{
					this.Onsubmitted_byChanging(value);
					this.SendPropertyChanging();
					this._submitted_by = value;
					this.SendPropertyChanged("submitted_by");
					this.Onsubmitted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_date", DbType="Date NOT NULL")]
		public System.DateTime submitted_date
		{
			get
			{
				return this._submitted_date;
			}
			set
			{
				if ((this._submitted_date != value))
				{
					this.Onsubmitted_dateChanging(value);
					this.SendPropertyChanging();
					this._submitted_date = value;
					this.SendPropertyChanged("submitted_date");
					this.Onsubmitted_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wotype", DbType="Int NOT NULL")]
		public int wotype
		{
			get
			{
				return this._wotype;
			}
			set
			{
				if ((this._wotype != value))
				{
					if (this._WOType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwotypeChanging(value);
					this.SendPropertyChanging();
					this._wotype = value;
					this.SendPropertyChanged("wotype");
					this.OnwotypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinator", DbType="Int")]
		public System.Nullable<int> ProgramManager
		{
			get
			{
				return this._coordinator;
			}
			set
			{
				if ((this._coordinator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramManagerChanging(value);
					this.SendPropertyChanging();
					this._coordinator = value;
					this.SendPropertyChanged("ProgramManager");
					this.OnProgramManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duedate", DbType="Date")]
		public System.Nullable<System.DateTime> duedate
		{
			get
			{
				return this._duedate;
			}
			set
			{
				if ((this._duedate != value))
				{
					this.OnduedateChanging(value);
					this.SendPropertyChanging();
					this._duedate = value;
					this.SendPropertyChanged("duedate");
					this.OnduedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinatorNotes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string coordinatorNotes
		{
			get
			{
				return this._coordinatorNotes;
			}
			set
			{
				if ((this._coordinatorNotes != value))
				{
					this.OncoordinatorNotesChanging(value);
					this.SendPropertyChanging();
					this._coordinatorNotes = value;
					this.SendPropertyChanged("coordinatorNotes");
					this.OncoordinatorNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersNews", Storage="_WorkOrdersNews", ThisKey="ID", OtherKey="wID")]
		public EntitySet<WorkOrdersNews> WorkOrdersNews
		{
			get
			{
				return this._WorkOrdersNews;
			}
			set
			{
				this._WorkOrdersNews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersRadio", Storage="_WorkOrdersRadios", ThisKey="ID", OtherKey="wID")]
		public EntitySet<WorkOrdersRadio> WorkOrdersRadios
		{
			get
			{
				return this._WorkOrdersRadios;
			}
			set
			{
				this._WorkOrdersRadios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersVideo", Storage="_WorkOrdersVideos", ThisKey="ID", OtherKey="wID")]
		public EntitySet<WorkOrdersVideo> WorkOrdersVideos
		{
			get
			{
				return this._WorkOrdersVideos;
			}
			set
			{
				this._WorkOrdersVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_File", Storage="_Files", ThisKey="ID", OtherKey="wID")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="wID")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersWeb", Storage="_WorkOrdersWebs", ThisKey="ID", OtherKey="wID")]
		public EntitySet<WorkOrdersWeb> WorkOrdersWebs
		{
			get
			{
				return this._WorkOrdersWebs;
			}
			set
			{
				this._WorkOrdersWebs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Workorder", Storage="_Status1", ThisKey="status", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Workorders.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Workorders.Add(this);
						this._status = value.ID;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WOType_Workorder", Storage="_WOType1", ThisKey="wotype", OtherKey="ID", IsForeignKey=true)]
		public WOType WOType1
		{
			get
			{
				return this._WOType1.Entity;
			}
			set
			{
				WOType previousValue = this._WOType1.Entity;
				if (((previousValue != value) 
							|| (this._WOType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WOType1.Entity = null;
						previousValue.Workorders.Remove(this);
					}
					this._WOType1.Entity = value;
					if ((value != null))
					{
						value.Workorders.Add(this);
						this._wotype = value.ID;
					}
					else
					{
						this._wotype = default(int);
					}
					this.SendPropertyChanged("WOType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Workorder", Storage="_User", ThisKey="ProgramManager", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Workorders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Workorders.Add(this);
						this._coordinator = value.ID;
					}
					else
					{
						this._coordinator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersNews(WorkOrdersNews entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_WorkOrdersNews(WorkOrdersNews entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
		
		private void attach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_WorkOrdersRadios(WorkOrdersRadio entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
		
		private void attach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_WorkOrdersVideos(WorkOrdersVideo entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
		
		private void attach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = this;
		}
		
		private void detach_WorkOrdersWebs(WorkOrdersWeb entity)
		{
			this.SendPropertyChanging();
			entity.Workorder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private string _Filename;
		
		private bool _Revision;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnRevisionChanging(bool value);
    partial void OnRevisionChanged();
    #endregion
		
		public File()
		{
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(150)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Bit NOT NULL")]
		public bool Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_File", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookupPrintTypeOfProject")]
	public partial class lookupPrintTypeOfProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private bool _Active;
		
		private EntitySet<WorkOrdersPrint> _WorkOrdersPrints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public lookupPrintTypeOfProject()
		{
			this._WorkOrdersPrints = new EntitySet<WorkOrdersPrint>(new Action<WorkOrdersPrint>(this.attach_WorkOrdersPrints), new Action<WorkOrdersPrint>(this.detach_WorkOrdersPrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookupPrintTypeOfProject_WorkOrdersPrint", Storage="_WorkOrdersPrints", ThisKey="ID", OtherKey="ProjectType")]
		public EntitySet<WorkOrdersPrint> WorkOrdersPrints
		{
			get
			{
				return this._WorkOrdersPrints;
			}
			set
			{
				this._WorkOrdersPrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.lookupPrintTypeOfProject = this;
		}
		
		private void detach_WorkOrdersPrints(WorkOrdersPrint entity)
		{
			this.SendPropertyChanging();
			entity.lookupPrintTypeOfProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrdersPrint")]
	public partial class WorkOrdersPrint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private System.Nullable<int> _ProjectType;
		
		private string _ProjectTypeOther;
		
		private System.Nullable<int> _TypeOfDisplay;
		
		private string _TypeOfDisplayOther;
		
		private string _PromoItem;
		
		private System.Nullable<int> _PrintingMethod;
		
		private string _Budget;
		
		private System.Nullable<int> _PaperSize;
		
		private string _CustomPaperSize;
		
		private System.Nullable<int> _PaperType;
		
		private string _NumberCopies;
		
		private System.Nullable<int> _ColourInfo;
		
		private System.Nullable<bool> _FullBleed;
		
		private System.Nullable<int> _Credit;
		
		private string _CreditName;
		
		private string _Notes;
		
		private System.Nullable<int> _webID;
		
		private EntityRef<PrintColourInfo> _PrintColourInfo;
		
		private EntityRef<PrintCreditType> _PrintCreditType;
		
		private EntityRef<PrintMethod> _PrintMethod;
		
		private EntityRef<PrintPaperSize> _PrintPaperSize;
		
		private EntityRef<PrintPaperType> _PrintPaperType;
		
		private EntityRef<PrintTypeOfDisplay> _PrintTypeOfDisplay;
		
		private EntityRef<PrintTypeOfProject> _PrintTypeOfProject;
		
		private EntityRef<lookupPrintTypeOfProject> _lookupPrintTypeOfProject;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnProjectTypeChanging(System.Nullable<int> value);
    partial void OnProjectTypeChanged();
    partial void OnProjectTypeOtherChanging(string value);
    partial void OnProjectTypeOtherChanged();
    partial void OnTypeOfDisplayChanging(System.Nullable<int> value);
    partial void OnTypeOfDisplayChanged();
    partial void OnTypeOfDisplayOtherChanging(string value);
    partial void OnTypeOfDisplayOtherChanged();
    partial void OnPromoItemChanging(string value);
    partial void OnPromoItemChanged();
    partial void OnPrintingMethodChanging(System.Nullable<int> value);
    partial void OnPrintingMethodChanged();
    partial void OnBudgetChanging(string value);
    partial void OnBudgetChanged();
    partial void OnPaperSizeChanging(System.Nullable<int> value);
    partial void OnPaperSizeChanged();
    partial void OnCustomPaperSizeChanging(string value);
    partial void OnCustomPaperSizeChanged();
    partial void OnPaperTypeChanging(System.Nullable<int> value);
    partial void OnPaperTypeChanged();
    partial void OnNumberCopiesChanging(string value);
    partial void OnNumberCopiesChanged();
    partial void OnColourInfoChanging(System.Nullable<int> value);
    partial void OnColourInfoChanged();
    partial void OnFullBleedChanging(System.Nullable<bool> value);
    partial void OnFullBleedChanged();
    partial void OnCreditChanging(System.Nullable<int> value);
    partial void OnCreditChanged();
    partial void OnCreditNameChanging(string value);
    partial void OnCreditNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnwebIDChanging(System.Nullable<int> value);
    partial void OnwebIDChanged();
    #endregion
		
		public WorkOrdersPrint()
		{
			this._PrintColourInfo = default(EntityRef<PrintColourInfo>);
			this._PrintCreditType = default(EntityRef<PrintCreditType>);
			this._PrintMethod = default(EntityRef<PrintMethod>);
			this._PrintPaperSize = default(EntityRef<PrintPaperSize>);
			this._PrintPaperType = default(EntityRef<PrintPaperType>);
			this._PrintTypeOfDisplay = default(EntityRef<PrintTypeOfDisplay>);
			this._PrintTypeOfProject = default(EntityRef<PrintTypeOfProject>);
			this._lookupPrintTypeOfProject = default(EntityRef<lookupPrintTypeOfProject>);
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Int")]
		public System.Nullable<int> ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					if ((this._PrintTypeOfProject.HasLoadedOrAssignedValue || this._lookupPrintTypeOfProject.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTypeOther", DbType="NVarChar(255)")]
		public string ProjectTypeOther
		{
			get
			{
				return this._ProjectTypeOther;
			}
			set
			{
				if ((this._ProjectTypeOther != value))
				{
					this.OnProjectTypeOtherChanging(value);
					this.SendPropertyChanging();
					this._ProjectTypeOther = value;
					this.SendPropertyChanged("ProjectTypeOther");
					this.OnProjectTypeOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfDisplay", DbType="Int")]
		public System.Nullable<int> TypeOfDisplay
		{
			get
			{
				return this._TypeOfDisplay;
			}
			set
			{
				if ((this._TypeOfDisplay != value))
				{
					if (this._PrintTypeOfDisplay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeOfDisplayChanging(value);
					this.SendPropertyChanging();
					this._TypeOfDisplay = value;
					this.SendPropertyChanged("TypeOfDisplay");
					this.OnTypeOfDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfDisplayOther", DbType="NVarChar(255)")]
		public string TypeOfDisplayOther
		{
			get
			{
				return this._TypeOfDisplayOther;
			}
			set
			{
				if ((this._TypeOfDisplayOther != value))
				{
					this.OnTypeOfDisplayOtherChanging(value);
					this.SendPropertyChanging();
					this._TypeOfDisplayOther = value;
					this.SendPropertyChanged("TypeOfDisplayOther");
					this.OnTypeOfDisplayOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoItem", DbType="NVarChar(255)")]
		public string PromoItem
		{
			get
			{
				return this._PromoItem;
			}
			set
			{
				if ((this._PromoItem != value))
				{
					this.OnPromoItemChanging(value);
					this.SendPropertyChanging();
					this._PromoItem = value;
					this.SendPropertyChanged("PromoItem");
					this.OnPromoItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintingMethod", DbType="Int")]
		public System.Nullable<int> PrintingMethod
		{
			get
			{
				return this._PrintingMethod;
			}
			set
			{
				if ((this._PrintingMethod != value))
				{
					if (this._PrintMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrintingMethodChanging(value);
					this.SendPropertyChanging();
					this._PrintingMethod = value;
					this.SendPropertyChanged("PrintingMethod");
					this.OnPrintingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="NVarChar(10)")]
		public string Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperSize", DbType="Int")]
		public System.Nullable<int> PaperSize
		{
			get
			{
				return this._PaperSize;
			}
			set
			{
				if ((this._PaperSize != value))
				{
					if (this._PrintPaperSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaperSizeChanging(value);
					this.SendPropertyChanging();
					this._PaperSize = value;
					this.SendPropertyChanged("PaperSize");
					this.OnPaperSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomPaperSize", DbType="NVarChar(50)")]
		public string CustomPaperSize
		{
			get
			{
				return this._CustomPaperSize;
			}
			set
			{
				if ((this._CustomPaperSize != value))
				{
					this.OnCustomPaperSizeChanging(value);
					this.SendPropertyChanging();
					this._CustomPaperSize = value;
					this.SendPropertyChanged("CustomPaperSize");
					this.OnCustomPaperSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperType", DbType="Int")]
		public System.Nullable<int> PaperType
		{
			get
			{
				return this._PaperType;
			}
			set
			{
				if ((this._PaperType != value))
				{
					if (this._PrintPaperType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaperTypeChanging(value);
					this.SendPropertyChanging();
					this._PaperType = value;
					this.SendPropertyChanged("PaperType");
					this.OnPaperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberCopies", DbType="NVarChar(50)")]
		public string NumberCopies
		{
			get
			{
				return this._NumberCopies;
			}
			set
			{
				if ((this._NumberCopies != value))
				{
					this.OnNumberCopiesChanging(value);
					this.SendPropertyChanging();
					this._NumberCopies = value;
					this.SendPropertyChanged("NumberCopies");
					this.OnNumberCopiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColourInfo", DbType="Int")]
		public System.Nullable<int> ColourInfo
		{
			get
			{
				return this._ColourInfo;
			}
			set
			{
				if ((this._ColourInfo != value))
				{
					if (this._PrintColourInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColourInfoChanging(value);
					this.SendPropertyChanging();
					this._ColourInfo = value;
					this.SendPropertyChanged("ColourInfo");
					this.OnColourInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullBleed", DbType="Bit")]
		public System.Nullable<bool> FullBleed
		{
			get
			{
				return this._FullBleed;
			}
			set
			{
				if ((this._FullBleed != value))
				{
					this.OnFullBleedChanging(value);
					this.SendPropertyChanging();
					this._FullBleed = value;
					this.SendPropertyChanged("FullBleed");
					this.OnFullBleedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Int")]
		public System.Nullable<int> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					if (this._PrintCreditType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditName", DbType="NVarChar(100)")]
		public string CreditName
		{
			get
			{
				return this._CreditName;
			}
			set
			{
				if ((this._CreditName != value))
				{
					this.OnCreditNameChanging(value);
					this.SendPropertyChanging();
					this._CreditName = value;
					this.SendPropertyChanged("CreditName");
					this.OnCreditNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_webID", DbType="Int")]
		public System.Nullable<int> webID
		{
			get
			{
				return this._webID;
			}
			set
			{
				if ((this._webID != value))
				{
					this.OnwebIDChanging(value);
					this.SendPropertyChanging();
					this._webID = value;
					this.SendPropertyChanged("webID");
					this.OnwebIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintColourInfo_WorkOrdersPrint", Storage="_PrintColourInfo", ThisKey="ColourInfo", OtherKey="ID", IsForeignKey=true)]
		public PrintColourInfo PrintColourInfo
		{
			get
			{
				return this._PrintColourInfo.Entity;
			}
			set
			{
				PrintColourInfo previousValue = this._PrintColourInfo.Entity;
				if (((previousValue != value) 
							|| (this._PrintColourInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintColourInfo.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintColourInfo.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._ColourInfo = value.ID;
					}
					else
					{
						this._ColourInfo = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintColourInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintCreditType_WorkOrdersPrint", Storage="_PrintCreditType", ThisKey="Credit", OtherKey="ID", IsForeignKey=true)]
		public PrintCreditType PrintCreditType
		{
			get
			{
				return this._PrintCreditType.Entity;
			}
			set
			{
				PrintCreditType previousValue = this._PrintCreditType.Entity;
				if (((previousValue != value) 
							|| (this._PrintCreditType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintCreditType.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintCreditType.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._Credit = value.ID;
					}
					else
					{
						this._Credit = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintCreditType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintMethod_WorkOrdersPrint", Storage="_PrintMethod", ThisKey="PrintingMethod", OtherKey="ID", IsForeignKey=true)]
		public PrintMethod PrintMethod
		{
			get
			{
				return this._PrintMethod.Entity;
			}
			set
			{
				PrintMethod previousValue = this._PrintMethod.Entity;
				if (((previousValue != value) 
							|| (this._PrintMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintMethod.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintMethod.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._PrintingMethod = value.ID;
					}
					else
					{
						this._PrintingMethod = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintPaperSize_WorkOrdersPrint", Storage="_PrintPaperSize", ThisKey="PaperSize", OtherKey="ID", IsForeignKey=true)]
		public PrintPaperSize PrintPaperSize
		{
			get
			{
				return this._PrintPaperSize.Entity;
			}
			set
			{
				PrintPaperSize previousValue = this._PrintPaperSize.Entity;
				if (((previousValue != value) 
							|| (this._PrintPaperSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintPaperSize.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintPaperSize.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._PaperSize = value.ID;
					}
					else
					{
						this._PaperSize = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintPaperSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintPaperType_WorkOrdersPrint", Storage="_PrintPaperType", ThisKey="PaperType", OtherKey="ID", IsForeignKey=true)]
		public PrintPaperType PrintPaperType
		{
			get
			{
				return this._PrintPaperType.Entity;
			}
			set
			{
				PrintPaperType previousValue = this._PrintPaperType.Entity;
				if (((previousValue != value) 
							|| (this._PrintPaperType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintPaperType.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintPaperType.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._PaperType = value.ID;
					}
					else
					{
						this._PaperType = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintPaperType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTypeOfDisplay_WorkOrdersPrint", Storage="_PrintTypeOfDisplay", ThisKey="TypeOfDisplay", OtherKey="ID", IsForeignKey=true)]
		public PrintTypeOfDisplay PrintTypeOfDisplay
		{
			get
			{
				return this._PrintTypeOfDisplay.Entity;
			}
			set
			{
				PrintTypeOfDisplay previousValue = this._PrintTypeOfDisplay.Entity;
				if (((previousValue != value) 
							|| (this._PrintTypeOfDisplay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTypeOfDisplay.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintTypeOfDisplay.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._TypeOfDisplay = value.ID;
					}
					else
					{
						this._TypeOfDisplay = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTypeOfDisplay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTypeOfProject_WorkOrdersPrint", Storage="_PrintTypeOfProject", ThisKey="ProjectType", OtherKey="ID", IsForeignKey=true)]
		public PrintTypeOfProject PrintTypeOfProject
		{
			get
			{
				return this._PrintTypeOfProject.Entity;
			}
			set
			{
				PrintTypeOfProject previousValue = this._PrintTypeOfProject.Entity;
				if (((previousValue != value) 
							|| (this._PrintTypeOfProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTypeOfProject.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._PrintTypeOfProject.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._ProjectType = value.ID;
					}
					else
					{
						this._ProjectType = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTypeOfProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookupPrintTypeOfProject_WorkOrdersPrint", Storage="_lookupPrintTypeOfProject", ThisKey="ProjectType", OtherKey="ID", IsForeignKey=true)]
		public lookupPrintTypeOfProject lookupPrintTypeOfProject
		{
			get
			{
				return this._lookupPrintTypeOfProject.Entity;
			}
			set
			{
				lookupPrintTypeOfProject previousValue = this._lookupPrintTypeOfProject.Entity;
				if (((previousValue != value) 
							|| (this._lookupPrintTypeOfProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookupPrintTypeOfProject.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._lookupPrintTypeOfProject.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._ProjectType = value.ID;
					}
					else
					{
						this._ProjectType = default(Nullable<int>);
					}
					this.SendPropertyChanged("lookupPrintTypeOfProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersPrint", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.WorkOrdersPrints.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersPrints.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrdersWeb")]
	public partial class WorkOrdersWeb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _wID;
		
		private System.Nullable<int> _pID;
		
		private System.Nullable<int> _TypeWebWork;
		
		private System.Nullable<int> _Website;
		
		private string _Location;
		
		private string _AtoZLocation;
		
		private System.Nullable<System.DateTime> _AtoZPostingDate;
		
		private System.Nullable<System.DateTime> _AtoZRemovalDate;
		
		private string _AtoZHeading;
		
		private string _AtoZContent;
		
		private string _CalEventName;
		
		private string _CalEventLocation;
		
		private System.Nullable<System.DateTime> _CalEventStartDate;
		
		private string _CalEventStartTime;
		
		private System.Nullable<System.DateTime> _CalEventEndDate;
		
		private string _CalEventEndTime;
		
		private string _ContactName;
		
		private string _ContactEmail;
		
		private string _EventDescription;
		
		private System.Nullable<System.DateTime> _DateToBePosted;
		
		private System.Nullable<int> _TypeOfUpdate;
		
		private System.Nullable<System.DateTime> _DateToBeChanged;
		
		private string _UpdateLocation;
		
		private string _UpdateDescription;
		
		private string _Goals;
		
		private string _Explanation;
		
		private string _Timeframe;
		
		private string _Budget;
		
		private string _Audience;
		
		private string _NumberOfPages;
		
		private System.Nullable<System.DateTime> _WebAdPostDate;
		
		private System.Nullable<System.DateTime> _WebAdEndDate;
		
		private string _WebAdURL;
		
		private string _WebAdContent;
		
		private System.Nullable<System.DateTime> _FacebookPostDate;
		
		private string _FacebookContent;
		
		private string _Notes;
		
		private EntityRef<WebSites> _WebSites;
		
		private EntityRef<WebType> _WebType;
		
		private EntityRef<WebUpdateType> _WebUpdateType;
		
		private EntityRef<Workorder> _Workorder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnwIDChanging(int value);
    partial void OnwIDChanged();
    partial void OnpIDChanging(System.Nullable<int> value);
    partial void OnpIDChanged();
    partial void OnTypeWebWorkChanging(System.Nullable<int> value);
    partial void OnTypeWebWorkChanged();
    partial void OnWebsiteChanging(System.Nullable<int> value);
    partial void OnWebsiteChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAtoZLocationChanging(string value);
    partial void OnAtoZLocationChanged();
    partial void OnAtoZPostingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAtoZPostingDateChanged();
    partial void OnAtoZRemovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAtoZRemovalDateChanged();
    partial void OnAtoZHeadingChanging(string value);
    partial void OnAtoZHeadingChanged();
    partial void OnAtoZContentChanging(string value);
    partial void OnAtoZContentChanged();
    partial void OnCalEventNameChanging(string value);
    partial void OnCalEventNameChanged();
    partial void OnCalEventLocationChanging(string value);
    partial void OnCalEventLocationChanged();
    partial void OnCalEventStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalEventStartDateChanged();
    partial void OnCalEventStartTimeChanging(string value);
    partial void OnCalEventStartTimeChanged();
    partial void OnCalEventEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalEventEndDateChanged();
    partial void OnCalEventEndTimeChanging(string value);
    partial void OnCalEventEndTimeChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnEventDescriptionChanging(string value);
    partial void OnEventDescriptionChanged();
    partial void OnDateToBePostedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToBePostedChanged();
    partial void OnTypeOfUpdateChanging(System.Nullable<int> value);
    partial void OnTypeOfUpdateChanged();
    partial void OnDateToBeChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToBeChangedChanged();
    partial void OnUpdateLocationChanging(string value);
    partial void OnUpdateLocationChanged();
    partial void OnUpdateDescriptionChanging(string value);
    partial void OnUpdateDescriptionChanged();
    partial void OnGoalsChanging(string value);
    partial void OnGoalsChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnTimeframeChanging(string value);
    partial void OnTimeframeChanged();
    partial void OnBudgetChanging(string value);
    partial void OnBudgetChanged();
    partial void OnAudienceChanging(string value);
    partial void OnAudienceChanged();
    partial void OnNumberOfPagesChanging(string value);
    partial void OnNumberOfPagesChanged();
    partial void OnWebAdPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWebAdPostDateChanged();
    partial void OnWebAdEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWebAdEndDateChanged();
    partial void OnWebAdURLChanging(string value);
    partial void OnWebAdURLChanged();
    partial void OnWebAdContentChanging(string value);
    partial void OnWebAdContentChanged();
    partial void OnFacebookPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFacebookPostDateChanged();
    partial void OnFacebookContentChanging(string value);
    partial void OnFacebookContentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public WorkOrdersWeb()
		{
			this._WebSites = default(EntityRef<WebSites>);
			this._WebType = default(EntityRef<WebType>);
			this._WebUpdateType = default(EntityRef<WebUpdateType>);
			this._Workorder = default(EntityRef<Workorder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wID", DbType="Int NOT NULL")]
		public int wID
		{
			get
			{
				return this._wID;
			}
			set
			{
				if ((this._wID != value))
				{
					if (this._Workorder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwIDChanging(value);
					this.SendPropertyChanging();
					this._wID = value;
					this.SendPropertyChanged("wID");
					this.OnwIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pID", DbType="Int")]
		public System.Nullable<int> pID
		{
			get
			{
				return this._pID;
			}
			set
			{
				if ((this._pID != value))
				{
					this.OnpIDChanging(value);
					this.SendPropertyChanging();
					this._pID = value;
					this.SendPropertyChanged("pID");
					this.OnpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeWebWork", DbType="Int")]
		public System.Nullable<int> TypeWebWork
		{
			get
			{
				return this._TypeWebWork;
			}
			set
			{
				if ((this._TypeWebWork != value))
				{
					if (this._WebType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeWebWorkChanging(value);
					this.SendPropertyChanging();
					this._TypeWebWork = value;
					this.SendPropertyChanged("TypeWebWork");
					this.OnTypeWebWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="Int")]
		public System.Nullable<int> Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					if (this._WebSites.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoZLocation", DbType="NVarChar(255)")]
		public string AtoZLocation
		{
			get
			{
				return this._AtoZLocation;
			}
			set
			{
				if ((this._AtoZLocation != value))
				{
					this.OnAtoZLocationChanging(value);
					this.SendPropertyChanging();
					this._AtoZLocation = value;
					this.SendPropertyChanged("AtoZLocation");
					this.OnAtoZLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoZPostingDate", DbType="Date")]
		public System.Nullable<System.DateTime> AtoZPostingDate
		{
			get
			{
				return this._AtoZPostingDate;
			}
			set
			{
				if ((this._AtoZPostingDate != value))
				{
					this.OnAtoZPostingDateChanging(value);
					this.SendPropertyChanging();
					this._AtoZPostingDate = value;
					this.SendPropertyChanged("AtoZPostingDate");
					this.OnAtoZPostingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoZRemovalDate", DbType="Date")]
		public System.Nullable<System.DateTime> AtoZRemovalDate
		{
			get
			{
				return this._AtoZRemovalDate;
			}
			set
			{
				if ((this._AtoZRemovalDate != value))
				{
					this.OnAtoZRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._AtoZRemovalDate = value;
					this.SendPropertyChanged("AtoZRemovalDate");
					this.OnAtoZRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoZHeading", DbType="NVarChar(255)")]
		public string AtoZHeading
		{
			get
			{
				return this._AtoZHeading;
			}
			set
			{
				if ((this._AtoZHeading != value))
				{
					this.OnAtoZHeadingChanging(value);
					this.SendPropertyChanging();
					this._AtoZHeading = value;
					this.SendPropertyChanged("AtoZHeading");
					this.OnAtoZHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoZContent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AtoZContent
		{
			get
			{
				return this._AtoZContent;
			}
			set
			{
				if ((this._AtoZContent != value))
				{
					this.OnAtoZContentChanging(value);
					this.SendPropertyChanging();
					this._AtoZContent = value;
					this.SendPropertyChanged("AtoZContent");
					this.OnAtoZContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventName", DbType="NVarChar(255)")]
		public string CalEventName
		{
			get
			{
				return this._CalEventName;
			}
			set
			{
				if ((this._CalEventName != value))
				{
					this.OnCalEventNameChanging(value);
					this.SendPropertyChanging();
					this._CalEventName = value;
					this.SendPropertyChanged("CalEventName");
					this.OnCalEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventLocation", DbType="NVarChar(255)")]
		public string CalEventLocation
		{
			get
			{
				return this._CalEventLocation;
			}
			set
			{
				if ((this._CalEventLocation != value))
				{
					this.OnCalEventLocationChanging(value);
					this.SendPropertyChanging();
					this._CalEventLocation = value;
					this.SendPropertyChanged("CalEventLocation");
					this.OnCalEventLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> CalEventStartDate
		{
			get
			{
				return this._CalEventStartDate;
			}
			set
			{
				if ((this._CalEventStartDate != value))
				{
					this.OnCalEventStartDateChanging(value);
					this.SendPropertyChanging();
					this._CalEventStartDate = value;
					this.SendPropertyChanged("CalEventStartDate");
					this.OnCalEventStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventStartTime", DbType="NVarChar(10)")]
		public string CalEventStartTime
		{
			get
			{
				return this._CalEventStartTime;
			}
			set
			{
				if ((this._CalEventStartTime != value))
				{
					this.OnCalEventStartTimeChanging(value);
					this.SendPropertyChanging();
					this._CalEventStartTime = value;
					this.SendPropertyChanged("CalEventStartTime");
					this.OnCalEventStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> CalEventEndDate
		{
			get
			{
				return this._CalEventEndDate;
			}
			set
			{
				if ((this._CalEventEndDate != value))
				{
					this.OnCalEventEndDateChanging(value);
					this.SendPropertyChanging();
					this._CalEventEndDate = value;
					this.SendPropertyChanged("CalEventEndDate");
					this.OnCalEventEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalEventEndTime", DbType="NVarChar(10)")]
		public string CalEventEndTime
		{
			get
			{
				return this._CalEventEndTime;
			}
			set
			{
				if ((this._CalEventEndTime != value))
				{
					this.OnCalEventEndTimeChanging(value);
					this.SendPropertyChanging();
					this._CalEventEndTime = value;
					this.SendPropertyChanged("CalEventEndTime");
					this.OnCalEventEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string EventDescription
		{
			get
			{
				return this._EventDescription;
			}
			set
			{
				if ((this._EventDescription != value))
				{
					this.OnEventDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EventDescription = value;
					this.SendPropertyChanged("EventDescription");
					this.OnEventDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToBePosted", DbType="Date")]
		public System.Nullable<System.DateTime> DateToBePosted
		{
			get
			{
				return this._DateToBePosted;
			}
			set
			{
				if ((this._DateToBePosted != value))
				{
					this.OnDateToBePostedChanging(value);
					this.SendPropertyChanging();
					this._DateToBePosted = value;
					this.SendPropertyChanged("DateToBePosted");
					this.OnDateToBePostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfUpdate", DbType="Int")]
		public System.Nullable<int> TypeOfUpdate
		{
			get
			{
				return this._TypeOfUpdate;
			}
			set
			{
				if ((this._TypeOfUpdate != value))
				{
					if (this._WebUpdateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeOfUpdateChanging(value);
					this.SendPropertyChanging();
					this._TypeOfUpdate = value;
					this.SendPropertyChanged("TypeOfUpdate");
					this.OnTypeOfUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToBeChanged", DbType="Date")]
		public System.Nullable<System.DateTime> DateToBeChanged
		{
			get
			{
				return this._DateToBeChanged;
			}
			set
			{
				if ((this._DateToBeChanged != value))
				{
					this.OnDateToBeChangedChanging(value);
					this.SendPropertyChanging();
					this._DateToBeChanged = value;
					this.SendPropertyChanged("DateToBeChanged");
					this.OnDateToBeChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateLocation", DbType="NVarChar(255)")]
		public string UpdateLocation
		{
			get
			{
				return this._UpdateLocation;
			}
			set
			{
				if ((this._UpdateLocation != value))
				{
					this.OnUpdateLocationChanging(value);
					this.SendPropertyChanging();
					this._UpdateLocation = value;
					this.SendPropertyChanged("UpdateLocation");
					this.OnUpdateLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UpdateDescription
		{
			get
			{
				return this._UpdateDescription;
			}
			set
			{
				if ((this._UpdateDescription != value))
				{
					this.OnUpdateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._UpdateDescription = value;
					this.SendPropertyChanged("UpdateDescription");
					this.OnUpdateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goals", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				if ((this._Goals != value))
				{
					this.OnGoalsChanging(value);
					this.SendPropertyChanging();
					this._Goals = value;
					this.SendPropertyChanged("Goals");
					this.OnGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeframe", DbType="NVarChar(255)")]
		public string Timeframe
		{
			get
			{
				return this._Timeframe;
			}
			set
			{
				if ((this._Timeframe != value))
				{
					this.OnTimeframeChanging(value);
					this.SendPropertyChanging();
					this._Timeframe = value;
					this.SendPropertyChanged("Timeframe");
					this.OnTimeframeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="NVarChar(255)")]
		public string Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audience", DbType="NVarChar(255)")]
		public string Audience
		{
			get
			{
				return this._Audience;
			}
			set
			{
				if ((this._Audience != value))
				{
					this.OnAudienceChanging(value);
					this.SendPropertyChanging();
					this._Audience = value;
					this.SendPropertyChanged("Audience");
					this.OnAudienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPages", DbType="NVarChar(50)")]
		public string NumberOfPages
		{
			get
			{
				return this._NumberOfPages;
			}
			set
			{
				if ((this._NumberOfPages != value))
				{
					this.OnNumberOfPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPages = value;
					this.SendPropertyChanged("NumberOfPages");
					this.OnNumberOfPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAdPostDate", DbType="Date")]
		public System.Nullable<System.DateTime> WebAdPostDate
		{
			get
			{
				return this._WebAdPostDate;
			}
			set
			{
				if ((this._WebAdPostDate != value))
				{
					this.OnWebAdPostDateChanging(value);
					this.SendPropertyChanging();
					this._WebAdPostDate = value;
					this.SendPropertyChanged("WebAdPostDate");
					this.OnWebAdPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAdEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> WebAdEndDate
		{
			get
			{
				return this._WebAdEndDate;
			}
			set
			{
				if ((this._WebAdEndDate != value))
				{
					this.OnWebAdEndDateChanging(value);
					this.SendPropertyChanging();
					this._WebAdEndDate = value;
					this.SendPropertyChanged("WebAdEndDate");
					this.OnWebAdEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAdURL", DbType="NVarChar(255)")]
		public string WebAdURL
		{
			get
			{
				return this._WebAdURL;
			}
			set
			{
				if ((this._WebAdURL != value))
				{
					this.OnWebAdURLChanging(value);
					this.SendPropertyChanging();
					this._WebAdURL = value;
					this.SendPropertyChanged("WebAdURL");
					this.OnWebAdURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebAdContent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string WebAdContent
		{
			get
			{
				return this._WebAdContent;
			}
			set
			{
				if ((this._WebAdContent != value))
				{
					this.OnWebAdContentChanging(value);
					this.SendPropertyChanging();
					this._WebAdContent = value;
					this.SendPropertyChanged("WebAdContent");
					this.OnWebAdContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookPostDate", DbType="Date")]
		public System.Nullable<System.DateTime> FacebookPostDate
		{
			get
			{
				return this._FacebookPostDate;
			}
			set
			{
				if ((this._FacebookPostDate != value))
				{
					this.OnFacebookPostDateChanging(value);
					this.SendPropertyChanging();
					this._FacebookPostDate = value;
					this.SendPropertyChanged("FacebookPostDate");
					this.OnFacebookPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookContent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string FacebookContent
		{
			get
			{
				return this._FacebookContent;
			}
			set
			{
				if ((this._FacebookContent != value))
				{
					this.OnFacebookContentChanging(value);
					this.SendPropertyChanging();
					this._FacebookContent = value;
					this.SendPropertyChanged("FacebookContent");
					this.OnFacebookContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebSites_WorkOrdersWeb", Storage="_WebSites", ThisKey="Website", OtherKey="ID", IsForeignKey=true)]
		public WebSites WebSites
		{
			get
			{
				return this._WebSites.Entity;
			}
			set
			{
				WebSites previousValue = this._WebSites.Entity;
				if (((previousValue != value) 
							|| (this._WebSites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebSites.Entity = null;
						previousValue.WorkOrdersWebs.Remove(this);
					}
					this._WebSites.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersWebs.Add(this);
						this._Website = value.ID;
					}
					else
					{
						this._Website = default(Nullable<int>);
					}
					this.SendPropertyChanged("WebSites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebType_WorkOrdersWeb", Storage="_WebType", ThisKey="TypeWebWork", OtherKey="ID", IsForeignKey=true)]
		public WebType WebType
		{
			get
			{
				return this._WebType.Entity;
			}
			set
			{
				WebType previousValue = this._WebType.Entity;
				if (((previousValue != value) 
							|| (this._WebType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebType.Entity = null;
						previousValue.WorkOrdersWebs.Remove(this);
					}
					this._WebType.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersWebs.Add(this);
						this._TypeWebWork = value.ID;
					}
					else
					{
						this._TypeWebWork = default(Nullable<int>);
					}
					this.SendPropertyChanged("WebType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebUpdateType_WorkOrdersWeb", Storage="_WebUpdateType", ThisKey="TypeOfUpdate", OtherKey="ID", IsForeignKey=true)]
		public WebUpdateType WebUpdateType
		{
			get
			{
				return this._WebUpdateType.Entity;
			}
			set
			{
				WebUpdateType previousValue = this._WebUpdateType.Entity;
				if (((previousValue != value) 
							|| (this._WebUpdateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebUpdateType.Entity = null;
						previousValue.WorkOrdersWebs.Remove(this);
					}
					this._WebUpdateType.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersWebs.Add(this);
						this._TypeOfUpdate = value.ID;
					}
					else
					{
						this._TypeOfUpdate = default(Nullable<int>);
					}
					this.SendPropertyChanged("WebUpdateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Workorder_WorkOrdersWeb", Storage="_Workorder", ThisKey="wID", OtherKey="ID", IsForeignKey=true)]
		public Workorder Workorder
		{
			get
			{
				return this._Workorder.Entity;
			}
			set
			{
				Workorder previousValue = this._Workorder.Entity;
				if (((previousValue != value) 
							|| (this._Workorder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workorder.Entity = null;
						previousValue.WorkOrdersWebs.Remove(this);
					}
					this._Workorder.Entity = value;
					if ((value != null))
					{
						value.WorkOrdersWebs.Add(this);
						this._wID = value.ID;
					}
					else
					{
						this._wID = default(int);
					}
					this.SendPropertyChanged("Workorder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Role;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public UserRole()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_Users", ThisKey="ID", OtherKey="Role")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = null;
		}
	}
}
#pragma warning restore 1591
